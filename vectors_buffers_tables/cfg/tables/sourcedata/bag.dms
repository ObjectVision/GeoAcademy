container BAG : using = "geography"
{
	parameter<string> SnapshotDir := '%SourceDataDir%/BAG/snapshots.ext/YYYY0101';
	
	container Panden :=
		for_each_ne(
			Typeringen/jaren1219/name
			, 'Pand_per_Jaar('+quote(Typeringen/jaren1219/name)+','+string(Typeringen/jaren1219/values)+','+quote(SnapshotDir)+')'
		);
	
	container Vbos :=
		for_each_ne(
			Typeringen/jaren1219/name
			, 'Vbo_per_Jaar('+quote(Typeringen/jaren1219/name)+','+string(Typeringen/jaren1219/values)+','+quote(SnapshotDir)+')'
		);
	
	Template Pand_per_Jaar
	{
		parameter<string> Jaar_str;
		parameter<uint32> Jaar;
		parameter<string> SnapshotDir;
		
		parameter<string> SnapshotDirJaar := replace(SnapshotDir, 'YYYY', string(Jaar));
	
		unit<uint32> pand_src
		:	StorageName     = "%SourceDataDir%/BAG/snapshots.ext/YYYY01/pand.fss"
		,	StorageReadOnly = "True"
		{
			attribute<geography/rdc_mm>            geometry_mm (polygon) ;
			attribute<string>                       identificatie;
			attribute<eenheden/jaar>                bouwjaar;
			attribute<classifications/type_woonpand_src> type_woonpand_rel;
			attribute<classifications/type_woonpand>     woonpand_rel := rjoin(type_woonpand_rel,id(classifications/type_woonpand_src), classifications/type_woonpand_src/woonpand_rel);
			
			attribute<geography/rdc_mm>            NW     := lower_bound(pand_src/geometry_mm);
			attribute<geography/rdc_mm>            SE     := upper_bound(pand_src/geometry_mm);
			attribute<int32>                        X_ext  := PointCol(SE) - PointCol(NW);
			attribute<int32>                        Y_ext  := PointRow(SE) - PointRow(NW);
			
			attribute<geography/rdc_mm>            pand_centroid := centroid_or_mid(geometry_mm);
			attribute<uint32>                       ams_rel    := point_in_polygon(pand_centroid[geography/rdc], selectie_polygoon/polygon);
		}
		
		unit<uint32> pand := subset(pand_src/X_ext < 1000000i && pand_src/Y_ext < 1000000i && IsDefined(pand_src/ams_rel))
		, DialogType = "Map"
		, DialogData = "geometry_mm"
		, FreeData = "False"
		{
			attribute<geography/rdc_mm>           geometry_mm (polygon)       := pand_src/geometry_mm[Nr_OrgEntity];
			attribute<geography/rdc>              geometry (polygon)          := geometry_mm[geography/rdc];
			attribute<string>                     identificatie               := pand_src/identificatie[Nr_OrgEntity];
			attribute<eenheden/jaar>              bouwjaar                    := pand_src/bouwjaar[Nr_OrgEntity];
			attribute<int16>                      bouwjaar_trunc              := bouwjaar < 1000s || bouwjaar > 2019s ? (0/0)[int16] : bouwjaar < 1600s ? 1600s : bouwjaar;
			attribute<classifications/type_woonpand>   woonpand_rel                := pand_src/woonpand_rel[Nr_OrgEntity];
			attribute<eenheden/m2>                opp                         := area(geometry, eenheden/m2);
			
			attribute<geography/rdc>              pand_centroid               := centroid_or_mid(geometry);
			attribute<geography/NL_grid/domain>   NL_grid_domain_rel          := pand_centroid[geography/NL_grid/domain];
			
			attribute<uint32>                     sum_vbo                     := ='count(vbos/'+Jaar_str+'/vbo/geometry, vbos/'+Jaar_str+'/vbo/pand_rel)';
			attribute<uint32>                     monumentale_per_domain_grid   (NL_grid/domain) := count(bouwjaar_trunc <= 1900s ? bouwjaar_trunc : (0/0)[int16], NL_grid_domain_rel);
		}
	}
	
	
	Template Vbo_per_Jaar
	{
		parameter<string> Jaar_str;
		parameter<uint32> Jaar;
		parameter<string> SnapshotDir;
		
		parameter<string> SnapshotDirJaar := replace(SnapshotDir, 'YYYY', string(Jaar));
		
		unit<uint32> vbo
		:	StorageName     = "= SnapshotDirJaar + '/vbo.fss'"
		,	StorageReadOnly = "True"
		, 	FreeData        = "False"
		,	DialogType = "Map"
		,	DialogData = "geometry_mm"

		{
			attribute<geography/rdc_mm>           geometry_mm; 
			attribute<geography/rdc>              geometry             := geometry_mm[geography/rdc];
			attribute<string>                     identificatie;
			attribute<string>                     nummeraanduiding_id;
			attribute<int32>                      oppervlakte;
			attribute<NL_grid/domain>             NL_grid_domain_rel   := geometry[NL_grid/domain];
			attribute<string>                     pand_id_geom         := ='panden/'+Jaar_str+'/pand/identificatie[point_in_polygon(geometry_mm, panden/'+Jaar_str+'/pand/geometry_mm)]', FreeData = "False";
			attribute<uint32>                     pand_rel             := ='point_in_polygon(geometry_mm, panden/'+Jaar_str+'/pand/geometry_mm)';
			
			attribute<classifications/type_woonpand>   woonpand_rel         := ='rjoin(pand_id_geom, panden/'+Jaar_str+'/pand/identificatie, panden/'+Jaar_str+'/pand/woonpand_rel)';

			attribute<uint32>                     ams_rel              := point_in_polygon(geometry, selectie_polygoon/polygon);
			
			container gebruiksdoelen :=
				for_each_ndv(
					classifications/vbo_gebruiksdoel/name
					, vbo
					, bool
				);
				
			container meta
			{
				attribute<string>        status        (..);
				attribute<uint32>        begindatum    (..);
			}
			
			container GebruiksdoelSets :=
				for_each_ne(
					classifications/vbo_gebruiksdoel/name
					, 'MaakGebruiksdoelSets_templ(' + quote(classifications/vbo_gebruiksdoel/name) +')'
				);
					
			Template MaakGebruiksdoelSets_templ
			{
				///
				parameter<string> name;
				///
				
				unit<uint32> GebruiksdoelSet := ='subset(vbo/gebruiksdoelen/' + name + ' 
					&& (vbo/meta/status == ''Verblijfsobject buiten gebruik'' || vbo/meta/status == ''Verblijfsobject in gebruik'' || vbo/meta/status == ''Verblijfsobject in gebruik (niet ingemeten)'')
					)'
				,	DialogType = "Map"
				,	DialogData = "geometry_mm"
				, 	FreeData = "False"
				// ,   Storagename = "='%LocalDataProjDir%/OutputOri/BAG_vbo_2018_' +name+ '_opp.dbf'"
				{
					attribute<geography/rdc_mm>                                       geometry_mm         := vbo/geometry_mm[nr_OrgEntity], DisableStorage = "True";
					attribute<geography/rdc>                                          geometry            := geometry_mm[geography/rdc]; //, Storagename = "='%LocalDataProjDir%/OutputOri/BAG_vbo_2018_' +name+ '_opp.shp'";
					attribute<int32>                                                   oppervlakte         := vbo/oppervlakte[nr_OrgEntity];
					attribute<int32>                                                   oppervlakte_trunc   := oppervlakte < 1000i ? oppervlakte : 0i, DisableStorage = "True";
					
					attribute<string>                                                  identificatie       := vbo/identificatie[nr_OrgEntity];
					attribute<uint32>                                                  begindatum          := vbo/meta/begindatum[nr_OrgEntity];
					attribute<string>                                                  nummeraanduiding_id := vbo/nummeraanduiding_id[nr_OrgEntity];

					attribute<string>                                                  pand_id_geom        := vbo/pand_id_geom[nr_OrgEntity];
					attribute<classifications/type_woonpand>                                woonpand_rel        := ='rjoin(pand_id_geom, panden/'+Jaar_str+'/pand/identificatie, panden/'+Jaar_str+'/pand/woonpand_rel)';
					attribute<NL_grid/domain>                                          NL_grid_domain_rel  := geometry[NL_grid/domain];
					
					attribute<nrhouseha>                                                 count_ha (NL_grid/domain)   := count(geometry, NL_grid_domain_rel)[nrhouseha];  
					attribute<int32>                                                   sum_opp_ha (NL_grid/domain) := sum(oppervlakte < 1000i && oppervlakte >= 10i ? oppervlakte : 0i, NL_grid_domain_rel);  
					
					attribute<nrhouseha>                                                 count_ha_ams_zonder0 (NL_grid/domain) := (count_ha * Brondata/NoordZuidlijn/borders/gemeente_2012/AgglAmsterdam/code_const[float32]) > 0[nrhouseha] ? count_ha * Brondata/NoordZuidlijn/borders/gemeente_2012/AgglAmsterdam/code_const[float32] : (0/0)[nrhouseha];  

					container type_woonpand :=
						for_each_nedv(
							classifications/type_woonpand/name 
							, 'sum(woonpand_rel == ' + string(id(classifications/type_woonpand)) + '[classifications/vbo_gebruiksdoel] ? 1 : 0, NL_grid_domain_rel)'
							, NL_grid/domain
							, uint32
						), Freedata = "False"
					{
						attribute<uint32> totaal (NL_grid/domain) := ='add(' + AsItemList(classifications/type_woonpand/name) + ')';
					}
				}
			}
		}
	}
}
