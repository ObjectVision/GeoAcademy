// **************************************************************************************************************//
//                                                                                                               //
//                       GeoDMS Academy, Basic Buffer Operations, January, 2021                                  //
//                                                                                                               //
// The GeoDMS Academy configuarations are used to get familiar with the GeoDMS syntax and to assist users        //
// with specific tasks                                                                                           //
//                                                                                                               //
// For more information, see: https://www.geodms.nl/Configuration_examples, section: full configuration examples //
//                                                                                                               //
// This configuration shows how to make grids (different grid size) from vector data (polygons and arcs)         //
//                                                                                                               //
// **************************************************************************************************************//

container Geography: Using = "units"
{
	unit<float32> rdc_coord;
	unit<fpoint>  rdc_base	: SpatialReference     = "EPSG:28992"	,	DialogData = "wmts_layer"; // wms achtergrondlaag voor kaarten met rd coordinaten
	unit<fpoint> rdc    := range(rdc_base, point_xy(0f,300000f), point_xy(280000f,625000f));
	unit<ipoint> rdc_mm := gridset(rdc, point_xy(0.001,0.001), point_xy(0.0, 0.0), ipoint);

	#include <wmts_layer.dms>

	container AMS_grid:  Using = "Units;geography"
	{
		parameter<m> x_min := 108200[m];
		parameter<m> x_max := 136200[m];
		parameter<m> y_min := 470000[m];
		parameter<m> y_max := 500000[m];

		container m100 := make_grid(100[m]);
		container m10  := make_grid(10[m]);
		container m2   := make_grid(2[m])
		{
			attribute<m100/domain> m100_rel (domain):= id(domain)[m100/domain];
		}

		template make_grid
		{
			// begin case parameters
			parameter<m> gridsize;
			// end case parameters

			parameter<int16> nr_cols := int16((x_max - x_min) / gridsize);
			parameter<int16> nr_rows := int16((y_max - y_min) / gridsize);

			unit<spoint> domain :=
				range(
					 gridset(
						 rdc
						,point_xy(gridsize, -gridsize, geography/rdc)
						,point_xy(   x_min,     y_max, geography/rdc)
						,spoint
					)
					,point_xy(0s, 0s)
					,point_xy(nr_cols, nr_rows)
				)
			,	DialogData = "geography/rdc"
			{
				attribute<int16> row := PointRow(id(.));
			}
		}
	}
	unit<spoint> kernel := range(spoint, point_xy(-5s, -5s), point_xy(6s, 6s))
	{
		attribute<uint32>  distMatr := dist2(point_xy(0s, 0s, .), uint32);
		attribute<float32> m100     := distMatr <= 1  ? 1f : 0f;
		attribute<float32> m500     := distMatr <= 25 ? 1f : 0f;
	}
}